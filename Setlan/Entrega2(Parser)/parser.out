Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    GREATEROREQUALTHAN
    DO
    MIN
    THEN
    LESSOREQUALTHAN
    MAXVALORSET
    PRINTLN
    WHILE
    PROGRAM
    DOUBLEPLUS
    PRINT
    SIMBOLO
    SIZESET
    CONCATSETS
    SET
    SEMICOLON
    RCURLY
    TRUE
    SCAN
    MAPMULTI
    RPARENTHESIS
    IDENTIFIER
    ASSIGN
    DIFFERENT
    REPEAT
    STRING
    FOR
    EQUALBOOL
    LPARENTHESIS
    ELSE
    GREATERTHAN
    ARROW
    IN
    UNARIO_CONJUNTO
    SIMBOLOS_CON_IGUAL
    MAPREST
    IF
    AND
    FALSE
    MAPINTDIVISION
    LCURLY
    INT
    MAX
    MAPSUBSTRACT
    LESSTHAN
    MINVALORSET
    COUNTERSLASH
    BOOL
    INTERSECCION
    NOT
    USING
    COMMA
    MAPEADO
    OR
    MAPSUM

Grammar

Rule 0     S' -> expression
Rule 1     expression -> expression PLUS expression
Rule 2     expression -> expression DASH expression
Rule 3     expression -> expression INTDIVISION expression
Rule 4     expression -> expression RESTDIVISION expression
Rule 5     expression -> expression ASTERISK expression
Rule 6     expression -> DASH expression
Rule 7     expression -> INTEGER

Terminals, with rules where they appear

AND                  : 
ARROW                : 
ASSIGN               : 
ASTERISK             : 5
BOOL                 : 
COMMA                : 
CONCATSETS           : 
COUNTERSLASH         : 
DASH                 : 2 6
DIFFERENT            : 
DO                   : 
DOUBLEPLUS           : 
ELSE                 : 
EQUALBOOL            : 
FALSE                : 
FOR                  : 
GREATEROREQUALTHAN   : 
GREATERTHAN          : 
IDENTIFIER           : 
IF                   : 
IN                   : 
INT                  : 
INTDIVISION          : 3
INTEGER              : 7
INTERSECCION         : 
LCURLY               : 
LESSOREQUALTHAN      : 
LESSTHAN             : 
LPARENTHESIS         : 
MAPEADO              : 
MAPINTDIVISION       : 
MAPMULTI             : 
MAPREST              : 
MAPSUBSTRACT         : 
MAPSUM               : 
MAX                  : 
MAXVALORSET          : 
MIN                  : 
MINVALORSET          : 
NOT                  : 
OR                   : 
PLUS                 : 1
PRINT                : 
PRINTLN              : 
PROGRAM              : 
RCURLY               : 
REPEAT               : 
RESTDIVISION         : 4
RPARENTHESIS         : 
SCAN                 : 
SEMICOLON            : 
SET                  : 
SIMBOLO              : 
SIMBOLOS_CON_IGUAL   : 
SIZESET              : 
STRING               : 
THEN                 : 
TRUE                 : 
UNARIO_CONJUNTO      : 
USING                : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

expression           : 1 1 2 2 3 3 4 4 5 5 6 0

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression DASH expression
    (3) expression -> . expression INTDIVISION expression
    (4) expression -> . expression RESTDIVISION expression
    (5) expression -> . expression ASTERISK expression
    (6) expression -> . DASH expression
    (7) expression -> . INTEGER

    DASH            shift and go to state 1
    INTEGER         shift and go to state 2

    expression                     shift and go to state 3

state 1

    (6) expression -> DASH . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression DASH expression
    (3) expression -> . expression INTDIVISION expression
    (4) expression -> . expression RESTDIVISION expression
    (5) expression -> . expression ASTERISK expression
    (6) expression -> . DASH expression
    (7) expression -> . INTEGER

    DASH            shift and go to state 1
    INTEGER         shift and go to state 2

    expression                     shift and go to state 4

state 2

    (7) expression -> INTEGER .

    PLUS            reduce using rule 7 (expression -> INTEGER .)
    DASH            reduce using rule 7 (expression -> INTEGER .)
    INTDIVISION     reduce using rule 7 (expression -> INTEGER .)
    RESTDIVISION    reduce using rule 7 (expression -> INTEGER .)
    ASTERISK        reduce using rule 7 (expression -> INTEGER .)
    $end            reduce using rule 7 (expression -> INTEGER .)


state 3

    (0) S' -> expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . DASH expression
    (3) expression -> expression . INTDIVISION expression
    (4) expression -> expression . RESTDIVISION expression
    (5) expression -> expression . ASTERISK expression

    PLUS            shift and go to state 8
    DASH            shift and go to state 7
    INTDIVISION     shift and go to state 6
    RESTDIVISION    shift and go to state 9
    ASTERISK        shift and go to state 5


state 4

    (6) expression -> DASH expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . DASH expression
    (3) expression -> expression . INTDIVISION expression
    (4) expression -> expression . RESTDIVISION expression
    (5) expression -> expression . ASTERISK expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for DASH resolved as shift
  ! shift/reduce conflict for INTDIVISION resolved as shift
  ! shift/reduce conflict for RESTDIVISION resolved as shift
  ! shift/reduce conflict for ASTERISK resolved as shift
    $end            reduce using rule 6 (expression -> DASH expression .)
    PLUS            shift and go to state 8
    DASH            shift and go to state 7
    INTDIVISION     shift and go to state 6
    RESTDIVISION    shift and go to state 9
    ASTERISK        shift and go to state 5

  ! PLUS            [ reduce using rule 6 (expression -> DASH expression .) ]
  ! DASH            [ reduce using rule 6 (expression -> DASH expression .) ]
  ! INTDIVISION     [ reduce using rule 6 (expression -> DASH expression .) ]
  ! RESTDIVISION    [ reduce using rule 6 (expression -> DASH expression .) ]
  ! ASTERISK        [ reduce using rule 6 (expression -> DASH expression .) ]


state 5

    (5) expression -> expression ASTERISK . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression DASH expression
    (3) expression -> . expression INTDIVISION expression
    (4) expression -> . expression RESTDIVISION expression
    (5) expression -> . expression ASTERISK expression
    (6) expression -> . DASH expression
    (7) expression -> . INTEGER

    DASH            shift and go to state 1
    INTEGER         shift and go to state 2

    expression                     shift and go to state 10

state 6

    (3) expression -> expression INTDIVISION . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression DASH expression
    (3) expression -> . expression INTDIVISION expression
    (4) expression -> . expression RESTDIVISION expression
    (5) expression -> . expression ASTERISK expression
    (6) expression -> . DASH expression
    (7) expression -> . INTEGER

    DASH            shift and go to state 1
    INTEGER         shift and go to state 2

    expression                     shift and go to state 11

state 7

    (2) expression -> expression DASH . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression DASH expression
    (3) expression -> . expression INTDIVISION expression
    (4) expression -> . expression RESTDIVISION expression
    (5) expression -> . expression ASTERISK expression
    (6) expression -> . DASH expression
    (7) expression -> . INTEGER

    DASH            shift and go to state 1
    INTEGER         shift and go to state 2

    expression                     shift and go to state 12

state 8

    (1) expression -> expression PLUS . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression DASH expression
    (3) expression -> . expression INTDIVISION expression
    (4) expression -> . expression RESTDIVISION expression
    (5) expression -> . expression ASTERISK expression
    (6) expression -> . DASH expression
    (7) expression -> . INTEGER

    DASH            shift and go to state 1
    INTEGER         shift and go to state 2

    expression                     shift and go to state 13

state 9

    (4) expression -> expression RESTDIVISION . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression DASH expression
    (3) expression -> . expression INTDIVISION expression
    (4) expression -> . expression RESTDIVISION expression
    (5) expression -> . expression ASTERISK expression
    (6) expression -> . DASH expression
    (7) expression -> . INTEGER

    DASH            shift and go to state 1
    INTEGER         shift and go to state 2

    expression                     shift and go to state 14

state 10

    (5) expression -> expression ASTERISK expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . DASH expression
    (3) expression -> expression . INTDIVISION expression
    (4) expression -> expression . RESTDIVISION expression
    (5) expression -> expression . ASTERISK expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for DASH resolved as shift
  ! shift/reduce conflict for INTDIVISION resolved as shift
  ! shift/reduce conflict for RESTDIVISION resolved as shift
  ! shift/reduce conflict for ASTERISK resolved as shift
    $end            reduce using rule 5 (expression -> expression ASTERISK expression .)
    PLUS            shift and go to state 8
    DASH            shift and go to state 7
    INTDIVISION     shift and go to state 6
    RESTDIVISION    shift and go to state 9
    ASTERISK        shift and go to state 5

  ! PLUS            [ reduce using rule 5 (expression -> expression ASTERISK expression .) ]
  ! DASH            [ reduce using rule 5 (expression -> expression ASTERISK expression .) ]
  ! INTDIVISION     [ reduce using rule 5 (expression -> expression ASTERISK expression .) ]
  ! RESTDIVISION    [ reduce using rule 5 (expression -> expression ASTERISK expression .) ]
  ! ASTERISK        [ reduce using rule 5 (expression -> expression ASTERISK expression .) ]


state 11

    (3) expression -> expression INTDIVISION expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . DASH expression
    (3) expression -> expression . INTDIVISION expression
    (4) expression -> expression . RESTDIVISION expression
    (5) expression -> expression . ASTERISK expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for DASH resolved as shift
  ! shift/reduce conflict for INTDIVISION resolved as shift
  ! shift/reduce conflict for RESTDIVISION resolved as shift
  ! shift/reduce conflict for ASTERISK resolved as shift
    $end            reduce using rule 3 (expression -> expression INTDIVISION expression .)
    PLUS            shift and go to state 8
    DASH            shift and go to state 7
    INTDIVISION     shift and go to state 6
    RESTDIVISION    shift and go to state 9
    ASTERISK        shift and go to state 5

  ! PLUS            [ reduce using rule 3 (expression -> expression INTDIVISION expression .) ]
  ! DASH            [ reduce using rule 3 (expression -> expression INTDIVISION expression .) ]
  ! INTDIVISION     [ reduce using rule 3 (expression -> expression INTDIVISION expression .) ]
  ! RESTDIVISION    [ reduce using rule 3 (expression -> expression INTDIVISION expression .) ]
  ! ASTERISK        [ reduce using rule 3 (expression -> expression INTDIVISION expression .) ]


state 12

    (2) expression -> expression DASH expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . DASH expression
    (3) expression -> expression . INTDIVISION expression
    (4) expression -> expression . RESTDIVISION expression
    (5) expression -> expression . ASTERISK expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for DASH resolved as shift
  ! shift/reduce conflict for INTDIVISION resolved as shift
  ! shift/reduce conflict for RESTDIVISION resolved as shift
  ! shift/reduce conflict for ASTERISK resolved as shift
    $end            reduce using rule 2 (expression -> expression DASH expression .)
    PLUS            shift and go to state 8
    DASH            shift and go to state 7
    INTDIVISION     shift and go to state 6
    RESTDIVISION    shift and go to state 9
    ASTERISK        shift and go to state 5

  ! PLUS            [ reduce using rule 2 (expression -> expression DASH expression .) ]
  ! DASH            [ reduce using rule 2 (expression -> expression DASH expression .) ]
  ! INTDIVISION     [ reduce using rule 2 (expression -> expression DASH expression .) ]
  ! RESTDIVISION    [ reduce using rule 2 (expression -> expression DASH expression .) ]
  ! ASTERISK        [ reduce using rule 2 (expression -> expression DASH expression .) ]


state 13

    (1) expression -> expression PLUS expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . DASH expression
    (3) expression -> expression . INTDIVISION expression
    (4) expression -> expression . RESTDIVISION expression
    (5) expression -> expression . ASTERISK expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for DASH resolved as shift
  ! shift/reduce conflict for INTDIVISION resolved as shift
  ! shift/reduce conflict for RESTDIVISION resolved as shift
  ! shift/reduce conflict for ASTERISK resolved as shift
    $end            reduce using rule 1 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 8
    DASH            shift and go to state 7
    INTDIVISION     shift and go to state 6
    RESTDIVISION    shift and go to state 9
    ASTERISK        shift and go to state 5

  ! PLUS            [ reduce using rule 1 (expression -> expression PLUS expression .) ]
  ! DASH            [ reduce using rule 1 (expression -> expression PLUS expression .) ]
  ! INTDIVISION     [ reduce using rule 1 (expression -> expression PLUS expression .) ]
  ! RESTDIVISION    [ reduce using rule 1 (expression -> expression PLUS expression .) ]
  ! ASTERISK        [ reduce using rule 1 (expression -> expression PLUS expression .) ]


state 14

    (4) expression -> expression RESTDIVISION expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . DASH expression
    (3) expression -> expression . INTDIVISION expression
    (4) expression -> expression . RESTDIVISION expression
    (5) expression -> expression . ASTERISK expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for DASH resolved as shift
  ! shift/reduce conflict for INTDIVISION resolved as shift
  ! shift/reduce conflict for RESTDIVISION resolved as shift
  ! shift/reduce conflict for ASTERISK resolved as shift
    $end            reduce using rule 4 (expression -> expression RESTDIVISION expression .)
    PLUS            shift and go to state 8
    DASH            shift and go to state 7
    INTDIVISION     shift and go to state 6
    RESTDIVISION    shift and go to state 9
    ASTERISK        shift and go to state 5

  ! PLUS            [ reduce using rule 4 (expression -> expression RESTDIVISION expression .) ]
  ! DASH            [ reduce using rule 4 (expression -> expression RESTDIVISION expression .) ]
  ! INTDIVISION     [ reduce using rule 4 (expression -> expression RESTDIVISION expression .) ]
  ! RESTDIVISION    [ reduce using rule 4 (expression -> expression RESTDIVISION expression .) ]
  ! ASTERISK        [ reduce using rule 4 (expression -> expression RESTDIVISION expression .) ]

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 4 resolved as shift
WARNING: shift/reduce conflict for DASH in state 4 resolved as shift
WARNING: shift/reduce conflict for INTDIVISION in state 4 resolved as shift
WARNING: shift/reduce conflict for RESTDIVISION in state 4 resolved as shift
WARNING: shift/reduce conflict for ASTERISK in state 4 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 10 resolved as shift
WARNING: shift/reduce conflict for DASH in state 10 resolved as shift
WARNING: shift/reduce conflict for INTDIVISION in state 10 resolved as shift
WARNING: shift/reduce conflict for RESTDIVISION in state 10 resolved as shift
WARNING: shift/reduce conflict for ASTERISK in state 10 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 11 resolved as shift
WARNING: shift/reduce conflict for DASH in state 11 resolved as shift
WARNING: shift/reduce conflict for INTDIVISION in state 11 resolved as shift
WARNING: shift/reduce conflict for RESTDIVISION in state 11 resolved as shift
WARNING: shift/reduce conflict for ASTERISK in state 11 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 12 resolved as shift
WARNING: shift/reduce conflict for DASH in state 12 resolved as shift
WARNING: shift/reduce conflict for INTDIVISION in state 12 resolved as shift
WARNING: shift/reduce conflict for RESTDIVISION in state 12 resolved as shift
WARNING: shift/reduce conflict for ASTERISK in state 12 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 13 resolved as shift
WARNING: shift/reduce conflict for DASH in state 13 resolved as shift
WARNING: shift/reduce conflict for INTDIVISION in state 13 resolved as shift
WARNING: shift/reduce conflict for RESTDIVISION in state 13 resolved as shift
WARNING: shift/reduce conflict for ASTERISK in state 13 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 14 resolved as shift
WARNING: shift/reduce conflict for DASH in state 14 resolved as shift
WARNING: shift/reduce conflict for INTDIVISION in state 14 resolved as shift
WARNING: shift/reduce conflict for RESTDIVISION in state 14 resolved as shift
WARNING: shift/reduce conflict for ASTERISK in state 14 resolved as shift
